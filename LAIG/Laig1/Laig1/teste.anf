<anf>

    <!-- bloco de configuracoes globais -->
    <!-- a declaracao dos componentes deste bloco e' obrigatoria --> 
    <globals>
        <!-- Parametros de desenho -->
        <!-- Valores para mode: "fill" , "line", "point" -->
        <!-- Valores para shading: "flat", "gouraud" ) -->
        <drawing mode="line" shading="flat" background="10 10 10 10" />
 
        <!-- Parametros de culling -->
        <!-- Valores para cullface: "none", "back" , "front" ou "both" -->
        <!-- Valores para cullorder : "ccw" ou "cw" -->
        <culling face="both" order="ccw" />
 
        <!-- Parametros de iluminacao; seguem os parametros do OpenGL  -->
        <lighting doublesided="true" local="true" enabled="true" ambient="11 11 11 11" />
 
    </globals>

     <lights>
            <!-- Deve existir pelo menos uma luz declarada -->
            <!-- Atributo "marker" indica se deve ou nao desenhar-se uma esfera representativa -->
            <light id="ss" type="omni" enabled="true" marker="true" pos="2 2 2" >
               <component type="ambient" value="0.5 0.5 0.5 0.5" />
               <component type="diffuse" value="0.6 0.6 0.6 0.6" />
               <component type="specular" value="0.1 0.1 0.1 0.1" />

            </light>

            <light id="ss" type="spot" enabled="false" marker="false" pos="1 1 1" target="5 5 5"  
                angle="10" exponent="2" >

              <component type="ambient" value="0.5 0.5 0.5 0.5" />
               <component type="diffuse" value="0.6 0.6 0.6 0.6" />
               <component type="specular" value="0.1 0.1 0.1 0.1" />


            </light>
    </lights>


    <cameras initial="ss" >
        <!-- tem de existir, pelo menos uma camara dos tipos seguintes (perspective ou ortho) -->
        <!-- no caso da camara ortho, o atributo "direction" define o eixo segundo o qual se efetua a projecao -->

        <perspective id="ID" near="10" far="20" angle="45" pos="5 5 5" target="10 10 10" />
        <ortho id="ID2" direction="ee" near="21" far="32" left="10" right="10" top="10" bottom="10" />
        

    </cameras>


    <textures>       
          <texture id="ss" file="robot2.jpg" texlength_s="10" texlength_t="10" />
    </textures>

    <appearances>
        <!-- deve existir um ou mais blocos "appearance" -->
        <!-- IMPORTANTE: -->
        <!--   textureref e opcional, a utilizar caso haja textura associada a esta aparencia --> 
        <appearance id="ssid" shininess="10" textureref="ss" >
               <component type="ambient" value="1 1 1 1" />
               <component type="diffuse" value="2 2 2 2" />
               <component type="specular" value="3 3 3 3" />
        </appearance>
    </appearances>
    



    <graph rootid="ss">

        <!-- tem de existir, pelo menos, um bloco "node" -->
        <node id="ssid">
            <!-- bloco "transforms" obrigatorio -->
            <transforms>
                <!-- deve conter transformacoes explicitas usando as instrucoes seguintes sem limite nem ordem -->
                <!-- ex: bloco transforms pode ficar sem conteudo -->
                <!-- ex: bloco transforms pode ser R,T (nao tem S) -->
                <!-- ex: bloco transforms pode ser R,S,T,S -->
                <transform type="translate" to="1 1 1" />
                <transform type="rotate" axis="xx" angle="45" />
                <transform type="scale" factor="2 1 1" />
            </transforms>
          
            <!-- declaracao da aparencia a utilizar -->
            <!-- se id="inherit", o no' mantem (herda) a aparencia do "pai" -->

            <appearanceref id="ssid" />
 
                              
             <!-- conteudo do no; deve existir pelo menos um bloco "primitives" ou um "descendants" -->
             <!-- podem existir ambos -->

             <!-- bloco "primitives" --> 
            <primitives>
                <!-- podem existir varias primitivas -->

                <!-- Primitivas : rectangle, triangle, cylinder, sphere, torus -->
                <!--   Comandos a serem interpretados genericamente como em OpenGL/GLUT, exceto -->
                <!--   o cilindro, que deve adicionalmente ter topos ou tampas) -->            
                <rectangle xy1="1 1" xy2="1.4 1.3" />
                <triangle xyz1="2.0 2.0 2.0" xyz2="3 3.1 3.2" xyz3="4 2 3" />
                <cylinder base="20" top="10" height="5" slices="8" stacks="5" />      <!-- deve ter topos -->
                <sphere radius="10" slices="10" stacks="10" />
                <torus inner="2" outer="2" slices="3" loops="3" />
             </primitives>
               
             <!-- bloco "descendants" -->
            <descendants>
                <!-- Referencia a outros elementos do grafo -->
                <!-- (repetir o no. de vezes necessario) -->
                <!-- LEMBRANDO: qualquer no' pode ser referenciado previamente 'a sua declaracao; isto -->
                <!--            e', a ordem pela qual os nos sao declarados e' irrelevante -->

                <noderef id="ss" />

            </descendants>
        </node>
 </anf>